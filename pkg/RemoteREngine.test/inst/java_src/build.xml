<?xml version="1.0"?>
<project default="all" name="RemoteREngine.test">

	<property file="build.properties"/>
	
	<taskdef resource="testngtasks" classpath="${jdk15.testing.jar}" />
  
	<r-set property="client.jar">
		system.file( "java", "RemoteREngine-client.jar", package = "RemoteREngine" )
	</r-set>
	
	<r-set property="client.policy">
	  system.file( "policy", "client.policy", package = "RemoteREngine" )
	</r-set>

	<r-set property="server.policy">
	  system.file( "policy", "server.policy", package = "RemoteREngine" )
	</r-set>

	
	
	<path id="project.classpath">
		<pathelement location="${client.jar}" />
		<pathelement location="${jdk15.testing.jar}" />
	</path>
	
	<target name="compile">
		
		<mkdir dir="build" />
		<javac
			destdir="${build.dir}"  
			includeJavaRuntime="yes"
			debug="${compiler.debug}"
			debuglevel="${compiler.debuglevel}"
			optimize="${compiler.optimize}"
			deprecation="${compiler.deprecation}"
			verbose="${compiler.verbose}"
			nowarn="${compiler.nowarn}"
			target="${compiler.target}"
			source="${compiler.source}">
  
			<src path="src" />
			<include name="**/*.java"/>
			<classpath refid="project.classpath" />
		</javac>
	</target>
	          
	<target name="build">
		<jar jarfile="${inst.dir}/RemoteREngine-test.jar">
			<fileset dir="${build.dir}" />
		</jar>
	</target>
	
	<target name="testng-standalone">
		<property name="dir.lib" value="../testng-standalone/lib" />
		<property name="dir.policy" value="../testng-standalone/policy" />
		
		<mkdir dir="${dir.lib}" />
		<copy file="${inst.dir}/RemoteREngine-test.jar" todir="${dir.lib}" />
		<copy file="${jdk15.testing.jar}" todir="${dir.lib}" />
		<copy file="${client.jar}" todir="${dir.lib}" />
		
		<mkdir dir="${dir.policy}" />
		<copy file="${client.policy}" todir="${dir.policy}" />
		<copy file="${server.policy}" todir="${dir.policy}" />
		
		<copy file="../testng/testng.xml" todir="../testng-standalone" />
		
		<zip destfile="../testng.zip" basedir="../testng-standalone" />
		<delete dir="../testng-standalone" />
		
	</target>
	
	<target name="generate-build-properties">
			<r-run><![CDATA[
			R_PACKAGE_DIR <- Sys.getenv( "R_PACKAGE_DIR" ) 
			testng.jar    <- file.path( R_PACKAGE_DIR, "java_src", "lib", "testng-5.10-jdk15.jar" )
			client.jar    <- system.file( "java", "RemoteREngine-client.jar", package = "RemoteREngine" )
			testcases.jar <- file.path( R_PACKAGE_DIR, "java", "RemoteREngine-test.jar" )
			rmicodebase   <- paste( "file:/", system.file( "java", "RemoteREngine-client.jar", package = "RemoteREngine" ), sep = "" )
			client.policy <- system.file( "policy", "client.policy", package = "RemoteREngine" ) 
			server.policy <- system.file( "policy", "server.policy", package = "RemoteREngine" ) 
			
			cat( 
				"testng.jar=", testng.jar, "\n", 
				"client.jar=", client.jar, "\n", 
				"testcases.jar=", testcases.jar, "\n", 
				"rmicodebase=", rmicodebase, "\n", 
				"client.policy=", client.policy, "\n" ,
				"server.policy=", server.policy, "\n", 
				file = "../testng/build.properties", sep = "" )
			]]>
		</r-run>

	</target>
	
	<target name="all" depends="compile,build,testng-standalone,generate-build-properties" />
	
</project>

